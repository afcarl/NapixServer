#!/usr/bin/env python
# -*- coding: utf-8 -*-

# FIXME : dire que c'est l'application a lancer avec bottle.
# Mettre un exemple de ligne de commande

import logging
import os

formatter = logging.Formatter( '%(levelname)s:%(name)s:%(message)s')

LOG_FILE =  '/tmp/napix.log'
file_handler = logging.FileHandler( LOG_FILE, mode='a')
file_handler.setLevel( logging.DEBUG)
file_handler.setFormatter( formatter)

console_handler = logging.StreamHandler( )
console_handler.setLevel( logging.WARNING )
console_handler.setFormatter( formatter)

logging.getLogger('Rocket').addHandler( file_handler)
logging.getLogger('Rocket').setLevel( logging.DEBUG )
logging.getLogger('Rocket.Errors').setLevel(logging.INFO)
logging.getLogger('Napix').setLevel( logging.DEBUG )
logging.getLogger('Napix').addHandler( console_handler )
logging.getLogger('Napix').addHandler( file_handler )

logging.getLogger('Napix.console').setLevel( logging.INFO )
logging.getLogger('Napix.console').addHandler( logging.StreamHandler() )

try:
    import napixd
    napixd.HOME = os.environ.get('NAPIXHOME','')
except ImportError:
    import sys
    path = os.path.realpath( os.path.join( os.path.dirname(__file__), '..' ))
    sys.path.append(path)
    import napixd
    napixd.HOME = path

import bottle
from napixd.executor.bottle_adapter import RocketAndExecutor
from napixd.loader import get_bottle_app
from napixd.conf import Conf

if __name__ == '__main__':
    logger = logging.getLogger('Napix.Server')
    console = logging.getLogger('Napix.console')

    #Get the napix bottle
    napixapp = get_bottle_app()
    #get the settings of the daemon
    settings = dict( Conf.get_default().get('Napix.daemon'))

    bottle.debug(settings.get('debug',False))
    logger.info('Starting')

    console.info( 'Starting process %s', os.getpid())
    console.info( 'Found napixd home at %s', napixd.HOME)
    console.info( 'Logging activity in %s', LOG_FILE )
    #run the daemon
    bottle.run(napixapp, host=settings.get('host','127.0.0.1'),
            port=settings.get('port',8002), server=RocketAndExecutor)

    logger.info('Stopping')

