

description = 'A Napix Server instance
The purpose of this server is to foo the bar.'

#The name of the service of this host.
service = "localhost:8002"

#A host or a list of hosts leading to this server
hosts = ''

webclient {
    #The asbolute path of the webclient.
    path = ''
}

lock {
    #The lock settings

    #The address of the Redis Server
    host = '127.0.0.1'

    #The target port on the Redis server
    port = 6379

    #The Redis database number
    database = 2
}

auth {
    #The Configuration of the authentication service.
    #Authentication is enabled by the auth option

    #The authentication URL
    url = 'http://auth.napix.io:8003/auth/authorization/'

    #When using autonomous-auth option,
    #the password used to authenticate users
    #login = 'local_master'
    password = ''

    #The name of the GET parameter used for non-secured authentication'
    #when the secure option is not used.
    get_parameter = 'token'
}

notify {
    #The notify section

    #The target URL of the notification service
    url = 'http://directory.napix.io:8002/directory/'

    credentials {
        #The credential used by this server to send notifications
        login = 'notification'
        key = 'notification'
    }

    #The interval at which this sever sends notifications
    delay = 300
}

storage {
    #The configuration of the stores

    #Built-in store implementations
    #Store each collection in a file
    store = 'napixd.store.backends.file.FileBackend'

    Store 'napixd.store.backends.file.FileBackend' {
        #The FileBackend configuration
    }
    Store 'napixd.store.backends.file.DirectoryBackend' {
        #Store each collection in a directory and each key in a file
    }

    Store 'napixd.store.backends.redis.RedisBackend' {
        #Store each collection in a Redis key
    }
    Store 'napixd.store.backends.redis.RedisHashBackend' {
        #Store each collection as a Redis Hash
    }
    Store 'napixd.store.backends.redis.RedisKeyBackend' {
        #Store the list of the keys of a collection as a set and each key as a Redis key
    }


    #The default backend for counters
    counter = 'napixd.store.backends.local.LocalCounter'

    #Built-in counter implementations
    Counter 'napixd.store.backends.local.LocalCounter' {
        #A local in-memory counter
    }

    Counter 'napixd.store.backends.redis.RedisCounter' {
        #A Redis backed counter
    }
}

managers {
    #The list of the managers in this server.
    #They key is the URL prefix, the value is a dotted python path to the manager class",
    local = 'napixd.contrib.host.HostInfo'
}

Manager 'local' {
    this = 'that'
}
