var NullEditView=Backbone.View.extend({tagName:"em",dataType:"null",initialize:function(a,b){this.originalValue=b},render:function(){return this.$el.text("null"),this},getValue:function(){return null}}),BooleanEditView=Backbone.View.extend({tagName:"input",complex:!1,dataType:"boolean",initialize:function(a,b){this.originalValue=b,this.$el.prop("checked",a).prop("type","checkbox")},getValue:function(){return this.$el.prop("checked")}}),StringEditView=Backbone.View.extend({tagName:"input",complex:!1,type:"text",dataType:"string",initialize:function(a,b){this.originalValue=b,this.$el.prop("type",this.type).prop("value",this._choose(a,b)).blur(_.bind(this.trigger,this,"change"))},_choose:function(a,b){var c=this._score(a),d=this._score(b);return!c&&!d?"":(a=c>=d?a:b,Math.max(c,d)>.25?a:_.first(a))},_score:function(a){return _.isString(a)?1:_.isNumber(a)?.75:_.isNull(a)||_.isBoolean(a)||_.isEmpty(a)?0:_.isArray(a)?.25:.25},getValue:function(){return this._getValue()},_getValue:function(){return this.$el.prop("value")}}),NumberEditView=StringEditView.extend({type:"number",dataType:"number",getValue:function(){return Number(this._getValue())},_score:function(a){return _.isNumber(a)?1:_.isString(a)?.5:0}}),FixedIterableEditView=Backbone.View.extend({complex:!0,initialize:function(a,b){this.originalValue=b,a=this._choose(a,b),this.valueViews=_.map(a,this.makeView)},_choose:function(a,b){var c=this._score(a),d=this._score(b);return!c&&!d?[]:(a=c>=d?a:b,Math.max(c,d)===.25?[a]:a)},render:function(a){return _.each(this.valueViews,function(a){$("<li />").append(a.render().el).appendTo(this.el)},this),this},_score:function(a){return _.isNull(a)||_.isBoolean(a)?0:_.isNumber(a)||_.isString(a)?.25:_.isArray(a)?.75+this.arrayBias*.25:1+this.arrayBias*.25}}),IterableEditView=FixedIterableEditView.extend({addTextTemplate:mustache.compile('<li class="add-item" ><button class="btn btn-mini">{{ . }}</button></li>'),events:{"click .add-item":"addItem"},render:function(a){return IterableEditView.__super__.render.call(this,a),this._disabledAddKey||this.$el.append(this.addTextTemplate(this.addText)),this},removeKey:function(a){$(a.el).parent(this.$el.children("li")).remove(),this.valueViews=_.without(this.valueViews,a)},addItem:function(){var a=this.makeEmptyItem();return a.bind("pop",this.removeKey,this),this.valueViews.push(a),$("<li />").append(a.render().el).insertBefore(this.$el.children(".add-item")),!1},initialize:function(a,b){IterableEditView.__super__.initialize.call(this,a,b),_.each(this.valueViews,function(a){a.bind("pop",this.removeKey,this)},this)}},{make:function(a,b){return _.extend(b,a),{FixedView:FixedIterableEditView.extend(a),EditView:IterableEditView.extend(b)}}}),ArrayEditViews=IterableEditView.make({tagName:"ol",dataType:"array",arrayBias:1,makeView:function(a){return JSONEditView.getView(a)},getValue:function(){return _.map(this.valueViews,function(a){return a.getValue()})}},{addText:"Add a row",makeEmptyItem:function(){return JSONEditView.getView("")}}),ObjectEditViews=IterableEditView.make({tagName:"ul",dataType:"object",arrayBias:0,makeView:function(a,b){return new ObjectKeyEditView(b,a)},getValue:function(){return _(this.valueViews).chain().map(function(a){return a.getValue()}).objectify().value()}},{addText:"Add a key",makeEmptyItem:function(){return new ObjectKeyEditView("","")}}),KeyEditView=Backbone.View.extend({tagName:"label",initialize:function(a){this.editView=new StringEditView(a),this.editView.bind("change",this.update.bind(this))},update:function(){this.$el.empty().text(this.editView.getValue())},edit:function(){this.$el.text("").append(this.editView.el).focus()},render:function(){return this.$el.dblclick(this.edit.bind(this)),this.editView.getValue()===""?this.edit():this.update(),this},getValue:function(){return this.editView.getValue()}}),ObjectKeyEditView=Backbone.View.extend({tagName:"dd",initialize:function(a,b){this.keyView=new KeyEditView(a),this.valueView=JSONEditView.getView(b),this.valueView.bind("pop",this.trigger.bind(this,"pop",this))},render:function(){return this.$el.append($("<dl />").append(this.keyView.render().el).append(":")).append($("<dt />").append(this.valueView.render().el)),this},getValue:function(){return[this.keyView.getValue(),this.valueView.getValue()]}}),MultiTypeEditView=Backbone.View.extend({tagName:"div",className:"json-multiedit",initialize:function(a){this.view=a.view},dataTypes:{"null":NullEditView,bool:BooleanEditView,number:NumberEditView,string:StringEditView,array:ArrayEditViews.EditView,object:ObjectKeyEditView},template:'<div class="json-mte btn-group"><button class="btn btn-mini" data-type="null" >null</button><button class="btn btn-mini" data-type="bool" >bool</button><button class="btn btn-mini" data-type="string" >abc</button><button class="btn btn-mini" data-type="number" >123</button><button class="btn btn-mini" data-type="array" >[ ]</button><button class="btn btn-mini" data-type="object" >{ }</button><button class="btn btn-mini btn-danger" data-type="pop" >X</button/></div>',events:{"click button[data-type][data-type!='pop']":"transpose","click button[data-type='pop']":"pop"},render:function(){var a=$(this.template).appendTo(this.el);return a.find("[data-type='"+this.view.dataType+"']").addClass("active"),this.$el.append(this.view.render().el),this},getValue:function(){return this.view.getValue()},transpose:function(a){var b=this.dataTypes[a.target.dataset.type];return this.view=new b(this.view.getValue(),this.view.originalValue),this.$el.empty(),this.render(),!1},pop:function(){return this.trigger("pop",this),!1}})