define(["Backbone","underscore","jQuery","views/json/finder"],function(e,t,n,r){var i=e.View.extend({tagName:"span",className:"json-simple",complex:!1,initialize:function(e){this.value=String(e.value)},render:function(){return this.$el.text(this.value),this}},{detect:function(e){return t.isBoolean(e)||t.isNumber(e)}}),s=i.extend({tagName:"span",initialize:function(e){s.__super__.initialize.call(this,e),this.value.indexOf("\n")!==-1&&this.setElement(this.make("p",{"class":this.className}))},render:function(){return this.$el.append(t.escape(this.value).replace(/\n/g,"<br />")),this}},{detect:t.isString}),o=i.extend({initialize:function(e){this.value="?",t.any([[t.isNull,"null"],[t.isString,"Empty String"],[t.isArray,"Empty Array"],[t.bind(t.identity,t,!0),"Empty Object"]],function(t){return t[0](e.value)?(this.value=t[1],!0):!1},this)}},{detect:function(e){return t.isNull(e)||t.isEmpty(e)}}),u=e.View.extend({tagName:"ol",complex:!0,initialize:function(e){this.listViews=t.map(e.value,function(t){return e.finder.getView(t)})},render:function(){return t.each(this.listViews,function(e){n("<li />").append(e.render().el).appendTo(this.el)},this),this}},{detect:t.isArray}),a=e.View.extend({complex:!1,tagName:"li",initialize:function(e,t){this.key=e,this.valueView=t},render:function(){return this.valueView.complex?n("<dd />").append(n("<dl />",{"class":"json-key",text:this.key})).append(n("<dt />").append(this.valueView.render().el)).appendTo(this.el):n("<div />").append(n("<span />",{"class":"json-key",text:this.key})).append(" ").append(this.valueView.render().el).appendTo(this.el),this}}),f=e.View.extend({tagName:"ul",complex:!0,initialize:function(e){var n=e.finder;this.keyViews=t.map(t.keys(e.value),function(t){return new a(t,n.getView(e.value[t]))})},render:function(){return t.each(this.keyViews,function(e){this.$el.append(e.render().el)},this),this}},{detect:t.isObject}),l=e.View.extend({className:"json-object json",tagName:"div",finder:new r.viewer({views:[i,o,s,u,f]}),initialize:function(e){this.inside=this.finder.getView(e.value)},render:function(){return this.$el.append(this.inside.render().el),this}});return l})